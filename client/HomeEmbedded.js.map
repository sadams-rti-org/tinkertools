{
  "version": 3,
  "file": "HomeEmbedded.js",
  "sourceRoot": "",
  "sources": [
    "HomeEmbedded.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA,QAAQ,CAAC,YAAY,CAAC,QAAtB,GAAiC,QAAA,CAAA,CAAA;AAC/B,QAAA;IAAA,OAAO,CAAC,GAAR,CAAY,gBAAZ,EAA8B,IAA9B;IACA,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAA+B,MAA/B;IAEA,KAAA,GAAQ,OAAO,CAAC,GAAR,CAAY,WAAZ;IACR,MAAM,CAAC,SAAP,GAAmB,QAAA,CAAA,CAAA;MACjB,OAAO,CAAC,GAAR,CAAY,gBAAZ,EAA6B,KAA7B;MACA,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAAoC,CAAC,SAArC,GAAiD;MACjD,MAAM,CAAC,aAAP,GAAuB,IAAI,SAAJ,CAAc,KAAA,GAAM,UAApB;MACvB,MAAM,CAAC,aAAa,CAAC,SAArB,GAAiC,QAAA,CAAC,GAAD,CAAA,EAAA;AAC/B,YAAA,IAAA,EAAA;QAAA,IAAA,GAAO,GAAG,CAAC;QACX,IAAA,GAAO,IAAI,CAAC,KAAL,CAAW,IAAX;eACP,MAAM,CAAC,UAAP,CAAkB,IAAlB;MAH+B;MAIjC,MAAM,CAAC,aAAa,CAAC,MAArB,GAA8B,QAAA,CAAA,CAAA;QAC5B,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAAoC,CAAC,SAArC,GAAiD;eACjD,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,KAA5B;MAF4B;aAG9B,MAAM,CAAC,aAAa,CAAC,OAArB,GAA+B,QAAA,CAAA,CAAA;QAC7B,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAAoC,CAAC,SAArC,GAAiD;QACjD,OAAO,CAAC,GAAR,CAAY,WAAZ,EAAyB,KAAzB;eACA,UAAA,CAAW,MAAM,CAAC,SAAlB,EAA4B,IAA5B;MAH6B;IAXd;IAgBnB,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAA+B,IAA/B;AACA;MACE,MAAM,CAAC,SAAP,CAAA,EADF;KAAA,aAAA;MAGE,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAA+B,KAA/B;MACA,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAAoC,CAAC,SAArC,GAAiD,2FAJnD;KArBA;;IA4BA,MAAM,CAAC,SAAP,GAAmB,QAAA,CAAC,GAAD,CAAA;AACjB,UAAA;MAAA,OAAA,GAAU,QAAQ,CAAC,cAAT,CAAwB,UAAxB;MACV,IAAG,OAAH;QACE,IAAG,OAAO,CAAC,KAAM,CAAA,CAAA,CAAE,CAAC,IAAjB,GAAwB,QAA3B;AACE,iBAAO,gBAAA,CAAiB,OAAO,CAAC,KAAM,CAAA,CAAA,CAA/B,EADT;SAAA,MAAA;AAGE,iBAAO,SAAA,CAAU,OAAO,CAAC,KAAM,CAAA,CAAA,CAAxB,EAHT;SADF;;MAKA,OAAA,GAAU,QAAQ,CAAC,cAAT,CAAwB,OAAxB;MACV,IAAG,OAAH;QACE,IAAG,OAAO,CAAC,KAAM,CAAA,CAAA,CAAE,CAAC,IAAjB,GAAwB,QAA3B;AACE,iBAAO,gBAAA,CAAiB,OAAO,CAAC,KAAM,CAAA,CAAA,CAA/B,EADT;SAAA,MAAA;AAGE,iBAAO,SAAA,CAAU,OAAO,CAAC,KAAM,CAAA,CAAA,CAAxB,EAHT;SADF;;IARiB;IAcnB,MAAM,CAAC,gBAAP,GAA0B,QAAA,CAAC,QAAD,CAAA;AACxB,UAAA;MAAA,MAAA,GAAS,IAAI;MACb,MAAM,CAAC,UAAP,CAAmB,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAiB,QAAjB,CAAnB,EAAgD,OAAhD;aACA,MAAM,CAAC,MAAP,GAAgB;IAHQ;IAI1B,MAAM,CAAC,SAAP,GAAmB,QAAA,CAAC,QAAD,CAAA;AACjB,UAAA;MAAA,MAAA,GAAS,IAAI;MACb,MAAM,CAAC,UAAP,CAAmB,QAAnB,EAA8B,OAA9B;aACA,MAAM,CAAC,MAAP,GAAgB;IAHC;IAKnB,MAAM,CAAC,UAAP,GAAoB,QAAA,CAAC,GAAD,CAAA;aAClB,CAAA,CAAE,eAAF,CAAkB,CAAC,GAAnB,CAAuB,GAAG,CAAC,MAAM,CAAC,MAAlC;IADkB;WAGpB,MAAM,CAAC,mBAAP,GAA6B;EAvDE,EAAjC;;;EA0DA,MAAM,CAAC,OAAO,CAAC,OAAf,GACE;IAAA,KAAA,EAAO,EAAP;IACA,MAAA,EAAQ,EADR;IAEA,KAAA,EAAO,CAFP;IAGA,MAAA,EAAQ,EAHR;IAIA,OAAA,EAAS,GAJT;IAKA,MAAA,EAAQ,CALR;IAMA,SAAA,EAAW,CANX;IAOA,KAAA,EAAO,MAPP;IAQA,KAAA,EAAO,CARP;IASA,KAAA,EAAO,EATP;IAUA,MAAA,EAAQ,IAVR;IAWA,OAAA,EAAS,KAXT;IAYA,SAAA,EAAW,SAZX;IAaA,MAAA,EAAQ,GAbR;IAcA,GAAA,EAAK,MAdL;IAeA,IAAA,EAAM,MAfN;EAAA,EA3DF;;;;;;EAmFA,QAAQ,CAAC,YAAY,CAAC,OAAtB,CACE;IAAA,OAAA,EAAS,QAAA,CAAA,CAAA;aACP,CAAC,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAD,CAAA,KAA0B,CAAC,OAAO,CAAC,GAAR,CAAY,cAAZ,CAAD;IADnB,CAAT;IAEA,QAAA,EAAU,QAAA,CAAA,CAAA;aACR,CAAC,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAD,CAAA,KAA0B,CAAC,OAAO,CAAC,GAAR,CAAY,cAAZ,CAAD;IADlB,CAFV;IAIA,YAAA,EAAc,QAAA,CAAA,CAAA;aACZ,CAAC,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAD,CAAA,KAA0B;IADd,CAJd;IAOA,aAAA,EAAe,QAAA,CAAA,CAAA;aACb,CAAC,OAAO,CAAC,GAAR,CAAY,WAAZ,CAAD,CAAA,KAA6B;IADhB,CAPf;IASA,cAAA,EAAgB,QAAA,CAAA,CAAA;aACd,CAAC,OAAO,CAAC,GAAR,CAAY,YAAZ,CAAD,CAAA,KAA8B;IADhB,CAThB;IAWA,YAAA,EAAc,QAAA,CAAA,CAAA,EAAA;;aAEX,OAAO,CAAC,GAAR,CAAY,gBAAZ;IAFW,CAXd;IAeA,WAAA,EAAa,QAAA,CAAA,CAAA;aACV,OAAO,CAAC,GAAR,CAAY,qBAAZ;IADU,CAfb;IAiBA,YAAA,EAAc,QAAA,CAAA,CAAA,EAAA;;aAEX,OAAO,CAAC,GAAR,CAAY,iBAAZ;IAFW;EAjBd,CADF;AAnFA",
  "sourcesContent": [
    "Template.HomeEmbedded.rendered = ->\n  Session.set('useLabelPrefix', true)\n  Session.set('keyForNodeLabel', \"null\")\n\n  wsUri = Session.get \"serverURL\"\n  window.wsConnect = ()->\n    console.log(\"connecting to \",wsUri)\n    document.getElementById('ws-status').innerHTML = \"<p style='font-size:16px; background-color: yellow; color: black;'>trying Websocket connection...</p>\"\n    window.socketToJanus = new WebSocket(wsUri+\"/gremlin\")\n    window.socketToJanus.onmessage = (msg) ->   #example send method\n      data = msg.data\n      json = JSON.parse(data)\n      window.dispatcher(json)\n    window.socketToJanus.onopen = () ->\n      document.getElementById('ws-status').innerHTML = \"<p style='font-size:16px; background-color: white; color: green;'>connected via Websocket</p>\"\n      console.log(\"connected to\", wsUri)\n    window.socketToJanus.onclose = ()->\n      document.getElementById('ws-status').innerHTML = \"<p style='font-size:16px; background-color: white; color: red;'>not connected</p>\"\n      console.log(\"closed to\", wsUri)\n      setTimeout(window.wsConnect,3000);  #attempt to reconnect\n\n  Session.set \"usingWebSockets\", true\n  try\n    window.wsConnect();  #connect the websocket\n  catch\n    Session.set \"usingWebSockets\", false\n    document.getElementById('ws-status').innerHTML = \"<p style='font-size:16px; background-color: white; color: black;'>Connected via HTTP</p>\"\n\n#*************** utilities\n  window.startRead = (evt)->\n    element = document.getElementById(\"fileName\")\n    if element\n      if element.files[0].size > 10000000\n        return getAsTextPreview element.files[0]\n      else\n        return getAsText element.files[0]\n    element = document.getElementById(\"files\")\n    if element\n      if element.files[0].size > 10000000\n        return getAsTextPreview element.files[0]\n      else\n        return getAsText element.files[0]\n\n  window.getAsTextPreview = (readFile)->\n    reader = new FileReader\n    reader.readAsText (readFile.slice(0,10000000)), \"UTF-8\"\n    reader.onload = fileLoaded\n  window.getAsText = (readFile)->\n    reader = new FileReader\n    reader.readAsText (readFile), \"UTF-8\"\n    reader.onload = fileLoaded\n\n  window.fileLoaded = (evt)->\n    $('#fileContents').val(evt.target.result)\n\n  window.BluemixGraphService = 'Bluemix Graph Service'\n\n#********************* Widgets\nMeteor.Spinner.options =\n  lines: 13 # The number of lines to draw\n  length: 10 # The length of each line\n  width: 5 # The line thickness\n  radius: 15 # The radius of the inner circle\n  corners: 0.7 # Corner roundness (0..1)\n  rotate: 0 # The rotation offset\n  direction: 1 # 1: clockwise, -1: counterclockwise\n  color: '#fff' # #rgb or #rrggbb\n  speed: 1 # Rounds per second\n  trail: 60 # Afterglow percentage\n  shadow: true # Whether to render a shadow\n  hwaccel: false # Whether to use hardware acceleration\n  className: 'spinner' # The CSS class to assign to the spinner\n  zIndex: 2e9 # The z-index (defaults to 2000000000)\n  top: 'auto' # Top position relative to parent in px\n  left: 'auto' # Left position relative to parent in px\n\n\n\n#******************** Buttons\n\n\n#******************** Helpers\n\nTemplate.HomeEmbedded.helpers\n  isAdmin: ->\n    (Session.get 'userID') == (Session.get 'admin-userID')\n  notAdmin: ->\n    (Session.get 'userID') != (Session.get 'admin-userID')\n  userLoggedIn: ->\n    (Session.get 'userID') != null\n\n  graphSelected: ->\n    (Session.get 'graphName') != null\n  scriptSelected: ->\n    (Session.get 'scriptName') != null\n  scriptResult: ->\n    #(Session.get 'scriptResult')\n    (Session.get 'showJSONResult')\n\n  graphToShow: ->\n    (Session.get 'graphFoundInResults')\n  drawingGraph: ->\n    #(Session.get 'drawButtonPressed')\n    (Session.get 'drawGraphResult')"
  ]
}