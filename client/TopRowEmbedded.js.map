{
  "version": 3,
  "file": "TopRowEmbedded.js",
  "sourceRoot": "",
  "sources": [
    "TopRowEmbedded.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA,QAAQ,CAAC,cAAc,CAAC,QAAxB,GAAmC,QAAA,CAAA,CAAA;IAEjC,CAAA,CAAE,YAAF,CAAe,CAAC,KAAhB,CAAsB,QAAA,CAAA,CAAA;aACpB,IAAA,CAAK,OAAL;IADoB,CAAtB;IAIA,CAAA,CAAE,mBAAF,CAAsB,CAAC,KAAvB,CAA6B,QAAA,CAAA,CAAA;AAC3B,UAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA;MAAA,IAAA,GAAO,OAAO,CAAC,IAAR,CAAa;QAAC,MAAA,EAAQ,OAAO,CAAC,GAAR,CAAY,QAAZ;MAAT,CAAb,CAA6C,CAAC,KAA9C,CAAA;MACS,KAAA,sCAAA;;QAAhB,OAAO,IAAI,CAAC;MAAI;MACS,KAAA,wCAAA;;QAAzB,OAAO,IAAI,CAAC;MAAa;MACzB,IAAA,GAAO,CAAC,IAAI,CAAC,SAAL,CAAe,IAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAD;MACP,IAAA,GAAO,IAAI,IAAJ,CAAS,IAAT,EAAe;QAAC,IAAA,EAAM;MAAP,CAAf;aACP,MAAA,CAAO,IAAP,EAAY,0BAAA,GAA2B,OAAO,CAAC,GAAR,CAAY,QAAZ,CAA3B,GAAiD,OAA7D;IAN2B,CAA7B;WAQA,CAAA,CAAE,mBAAF,CAAsB,CAAC,KAAvB,CAA6B,QAAA,CAAA,CAAA;aAC3B,OAAO,CAAC,MAAR,CACE;QAAA,KAAA,EAAO,qCAAP;QACA,OAAA,EAAS,iGADT;QAEA,OAAA,EACE;UAAA,OAAA,EACE;YAAA,KAAA,EAAO,QAAP;YACA,SAAA,EAAW,aADX;YAEA,QAAA,EAAU,QAAA,CAAA,CAAA;AACR,kBAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA;AAAA;gBACE,IAAA,GAAO,IAAI,CAAC,KAAL,CAAW,CAAA,CAAE,eAAF,CAAkB,CAAC,GAAnB,CAAA,CAAX,EADT;eAAA,aAAA;gBAEM;gBACJ,KAAA,CAAM,8CAAN;AACA,uBAJF;;cAKsC,KAAA,sCAAA;;gBAAtC,CAAC,IAAI,CAAC,MAAL,GAAc,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAf;cAAsC;AAClB;cAAA,KAAA,wCAAA;;6BAApB,OAAO,CAAC,MAAR,CAAe,IAAf;cAAoB,CAAA;;YAPZ;UAFV;QADF;MAHF,CADF;IAD2B,CAA7B;EAdiC;;EA+BnC,QAAQ,CAAC,cAAc,CAAC,OAAxB,CACE;IAAA,cAAA,EAAgB,QAAA,CAAA,CAAA;aACd,CAAC,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAD,CAAA,KAA0B;IADZ;EAAhB,CADF;AA/BA",
  "sourcesContent": [
    "Template.TopRowEmbedded.rendered = ->\n\n  $(\".goto-help\").click ->\n    open('/help')\n\n\n  $(\".user-file-export\").click ->\n    objs = Scripts.find({userID: Session.get('userID')}).fetch()\n    delete each._id for each in objs\n    delete each.scriptResult for each in objs\n    data = [JSON.stringify objs,null, 4]\n    blob = new Blob(data, {type: \"application/json;charset=utf-8\"})\n    saveAs(blob,'all-gremlin-scripts-for-'+Session.get('userID')+'.json')\n\n  $(\".user-file-import\").click ->\n    bootbox.dialog\n      title: \"Select a script file to be uploaded\"\n      message: '<input type=\"file\" id=\"fileName\" onchange=\"startRead()\"/>Preview:<textarea id=\"fileContents\" />'\n      buttons:\n        success:\n          label: \"Import\"\n          className: \"btn-success\"\n          callback: ()->\n            try\n              objs = JSON.parse $('#fileContents').val()\n            catch e\n              alert 'Syntax error in upload file - Expecting JSON'\n              return\n            (each.userID = Session.get('userID')) for each in objs\n            Scripts.insert each for each in objs\n\nTemplate.TopRowEmbedded.helpers\n  isUserLoggedIn: ->\n    (Session.get 'userID') != null\n"
  ]
}