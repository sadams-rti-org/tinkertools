{
  "version": 3,
  "file": "LoginAndServerAndGraphSelectors.js",
  "sourceRoot": "",
  "sources": [
    "LoginAndServerAndGraphSelectors.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Template.LoginAndServerAndGraphSelectors.rendered = ->\n\n  $(\"#serverSelector\").change ->\n    serverURL = $(\"#serverSelector\").val()\n    Session.set 'graphName', 'the default graph'\n    #$(\"#graphSelector\").val(null)\n    Session.set 'scriptName', null\n    $(\"#scriptSelector\").val(null)\n    if (window.ScriptEditor)\n      window.ScriptEditor.setValue 'Select a script from above or add a named script first using the [+Add] button.'\n    Session.set 'scriptResult', null\n    Session.set 'graphNames', []\n    Session.set 'serverURL', serverURL\n    Session.set 'tinkerPopVersion', '3'\n    Session.set 'runStatus', 'Nothing run'\n    Session.set 'queryTime','N/A'\n    Session.set 'elapsedTime','N/A'\n    Session.set('keyForNodeLabel', \"null\")\n    Session.set \"usingWebSockets\", true\n    try\n      window.wsConnect(serverURL);  #connect the websocket\n    catch\n      Session.set \"usingWebSockets\", false\n      document.getElementById('ws-status').innerHTML = \"<p style='font-size:16px; background-color: white; color: black;'>Connected via HTTP</p>\"\n\n\n  #------------------ Utility functions  -----------------------\n  window.startRead = (evt)->\n    element = document.getElementById(\"fileName\")\n    if element\n      if element.files[0].size > 10000000\n        return getAsTextPreview element.files[0]\n      else\n        return getAsText element.files[0]\n    element = document.getElementById(\"files\")\n    if element\n      if element.files[0].size > 10000000\n        return getAsTextPreview element.files[0]\n      else\n        return getAsText element.files[0]\n\n  window.getAsTextPreview = (readFile)->\n    reader = new FileReader\n    reader.readAsText (readFile.slice(0,10000000)), \"UTF-8\"\n    reader.onload = fileLoaded\n  window.getAsText = (readFile)->\n    reader = new FileReader\n    reader.readAsText (readFile), \"UTF-8\"\n    reader.onload = fileLoaded\n\n  window.fileLoaded = (evt)->\n    $('#fileContents').val(evt.target.result)\n\n  window.BluemixGraphService = 'Bluemix Graph Service'\n  #------------------ Button definitions -----------------------\n\n\n#------------------ Helpers -----------------------\n\n\nTemplate.LoginAndServerAndGraphSelectors.helpers\n\n  serverSelected: ->\n    (Session.get 'serverURL') != null\n\n  serverURLs: ->\n    userID = Session.get 'userID'\n    allForUserID = Scripts.find({userID: userID}).fetch()\n    all = (each.serverURL for each in allForUserID)\n    if userID\n      if (Session.get 'userID') != (Session.get 'examples-userID')\n        allExamples = Scripts.find({userID: Session.get 'examples-userID'}).fetch()\n        exampleServerURLs = (each.serverURL for each in allExamples)\n        all = exampleServerURLs.concat all\n      nodups = all.filter (v, i, a)->\n        a.indexOf(v) == i\n      if nodups.length == 0\n        return []\n      return nodups\n\n  serverURL: ->\n    @\n\n  graphNames: ->\n    serverURL = Session.get 'serverURL'\n    if serverURL\n      Session.set 'graphNames',['the default graph']\n    return Session.get 'graphNames'\n\n  graphName: ->\n    @\n\n  graphSelected: ->\n    (Session.get 'graphName') != null\n\n  isAdmin: ->\n    (Session.get 'userID') == (Session.get 'admin-userID')\n  notAdmin: ->\n    (Session.get 'userID') != (Session.get 'admin-userID')\n  userLoggedIn: ->\n    (Session.get 'userID') != null\n\ndiscoverTinkerPopVersionAt = (url, callback)->\n  Meteor.call 'discoverTinkerPopVersionAt', url, (err,res)->\n    callback(res)"
  ]
}