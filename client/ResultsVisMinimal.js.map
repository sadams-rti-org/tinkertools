{
  "version": 3,
  "file": "ResultsVisMinimal.js",
  "sourceRoot": "",
  "sources": [
    "ResultsVisMinimal.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Template.ResultsVisMinimal.rendered = ->\n  Session.set 'useLabelPrefix', true\n\n  #-------- set widget removal hook to clear graph and stop physics sim -----------\n  this.find('.results-vis')._uihooks\n  removeElement: (node)->\n    window.visnetwork.destroy()\n\n  #------------ Widget setup --------------\n  container = document.getElementById 'mynetwork'\n  config = document.getElementById 'vis-config'\n  $(config).hide()\n  visOptions = Session.get 'visOptions'\n  defaultOptions =\n    interaction:\n      hover: true\n      navigationButtons: true\n      multiselect: true\n    physics: true\n    nodes:\n      labelHighlightBold: true\n      font:\n        face: 'arial'\n      hidden: false\n      borderWidth: 1\n      color:\n        hover:\n          border: '#ffff00'\n          background: '#0066cc'\n        highlight:\n          border: '#ff0000'\n          background: '#ffff00'\n    edges:\n      hidden: false\n      arrows:\n        to:\n          enabled: true\n          scaleFactor: 0.5\n      color:\n        highlight:'#ff0000'\n        hover:'#0066cc'\n  if visOptions == undefined\n    options = defaultOptions\n  else\n    options = visOptions\n  data = []\n  console.log \"installing window.visnetwork\"\n  window.visnetwork = new vis.Network container, data, options\n\n\n\n  window.visnetwork.on('selectEdge', (params)->   # remember the selected edge\n    console.log params\n\n  )\n\n  window.visnetwork.on('selectNode', (params)->   # remember the selected node\n    console.log params\n\n  )\n\n  window.visnetwork.on('doubleClick', (params)->   # open a dialog for the selected element\n    if params.nodes.length != 0 # then a node was doubleClicked\n      element = window.visnetwork.nodesHandler.body.data.nodes.get(params.nodes[0])\n      html = popupDialogForElement(element.element)\n      if (Session.get 'tinkerPopVersion') == '3'\n        title = 'Vertex: '+element.element.id\n      else\n        title = 'Vertex: '+element.element._id\n    else\n      if params.edges.length == 1 # then an edge was doubleClicked\n        element =  window.visnetwork.edgesHandler.body.data.edges.get(params.edges[0])\n        html = popupDialogForElement(element.element)\n        title = 'Edge: '+element.element._id\n      else\n        return #background was doubleClicked, nothing to do yet\n    div = document.createElement 'div'\n    div.class = 'doubleClick-dialog'\n    div.innerHTML = html\n    $(\".vis-network\").append div\n    $(div).dialog({title: title,resizable: true})\n  )\n\n  $(\".results-graph-fit\").click ->\n    window.visnetwork.fit()\n\n  #-------------- Viz option controls --------------------\n  $(\".vis-options-node-hideShow\").prop('checked', true)\n  $(\".vis-options-node-hideShow\").change ->\n    oldState = $(\".vis-options-node-hideShow\").prop('checked')\n    newState = !oldState\n    window.visnetwork.setOptions {nodes:{hidden: newState}}\n\n  $(\".vis-options-edge-hideShow\").prop('checked', true)\n  $(\".vis-options-edge-hideShow\").change ->\n    oldState = $(\".vis-options-edge-hideShow\").prop('checked')\n    newState = !oldState\n    window.visnetwork.setOptions {edges:{hidden: newState}}\n\n  $(\".vis-options-physics-toggle\").prop('checked', true)\n  $(\".vis-options-physics-toggle\").change ->\n    state = $(\".vis-options-physics-toggle\").prop('checked')\n    window.visnetwork.setOptions {physics: state}\n\n  $('.all-settings').click (evt)->\n    $('#vis-config').dialog({title: 'Visualization Options',resizable: true,width:500,height:300})\n\n  #-------------- Node Label Selector --------------------\n  $(\"#nodeLabelProperty\").change ->\n    key = $(\"#nodeLabelProperty\").val()\n    Session.set 'keyForNodeLabel', key\n    nodes = window.visnetwork.nodesHandler.body.data.nodes\n    window.visnetwork.stopSimulation()\n    nodes.forEach (node)->\n      node.label = labelForVertex(node.element,key)\n      nodes.update node\n    window.visnetwork.startSimulation()\n\n#---------------- Helpers --------------------------\n\nTemplate.ResultsVisMinimal.helpers\n  vertexPropertyNames: ->\n    Session.get 'vertexPropertyNames'\n  vertexPropertyName: ->\n    @\n\n#----------------- Functions -----------------------\n\n#functions supplied by ResultsVis.coffee that loads before me"
  ]
}