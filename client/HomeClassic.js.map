{
  "version": 3,
  "file": "HomeClassic.js",
  "sourceRoot": "",
  "sources": [
    "HomeClassic.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Template.HomeClassic.rendered = ->\n  Session.set('useLabelPrefix', true)\n  Session.set('keyForNodeLabel', \"null\")\n\n\n  window.wsConnect = (wsUri)->\n    console.log(\"connecting to \",wsUri)\n    document.getElementById('ws-status').innerHTML = \"<p style='font-size:16px; background-color: yellow; color: black;'>trying Websocket connection...</p>\"\n    window.socketToJanus = new WebSocket(wsUri+\"/gremlin\")\n    window.socketToJanus.onmessage = (msg) ->   #example send method\n      data = msg.data\n      json = JSON.parse(data)\n      window.dispatcher(json)\n    window.socketToJanus.onopen = () ->\n      document.getElementById('ws-status').innerHTML = \"<p style='font-size:16px; background-color: white; color: green;'>connected via Websocket</p>\"\n      console.log(\"connected to\", wsUri)\n      window.WSURL = wsUri\n    window.socketToJanus.onclose = ()->\n      document.getElementById('ws-status').innerHTML = \"<p style='font-size:16px; background-color: white; color: red;'>not connected</p>\"\n      console.log(\"closed to\", window['WSURL'], ' attempting reconnect')\n      setTimeout(window.wsConnect(window['WSURL']),3000);  #attempt to reconnect\n\n  Session.set \"usingWebSockets\", true\n  try\n    window.wsConnect(Session.get \"serverURL\");  #connect the websocket\n  catch\n    Session.set \"usingWebSockets\", false\n    document.getElementById('ws-status').innerHTML = \"<p style='font-size:16px; background-color: white; color: black;'>Connected via HTTP</p>\"\n\n#*************** utilities\n\n#********************* Widgets\nMeteor.Spinner.options =\n  lines: 13 # The number of lines to draw\n  length: 10 # The length of each line\n  width: 5 # The line thickness\n  radius: 15 # The radius of the inner circle\n  corners: 0.7 # Corner roundness (0..1)\n  rotate: 0 # The rotation offset\n  direction: 1 # 1: clockwise, -1: counterclockwise\n  color: '#fff' # #rgb or #rrggbb\n  speed: 1 # Rounds per second\n  trail: 60 # Afterglow percentage\n  shadow: true # Whether to render a shadow\n  hwaccel: false # Whether to use hardware acceleration\n  className: 'spinner' # The CSS class to assign to the spinner\n  zIndex: 2e9 # The z-index (defaults to 2000000000)\n  top: 'auto' # Top position relative to parent in px\n  left: 'auto' # Left position relative to parent in px\n\n\n\n#******************** Buttons\n\n\n#******************** Helpers\n\nTemplate.HomeClassic.helpers\n  isAdmin: ->\n    (Session.get 'userID') == (Session.get 'admin-userID')\n  notAdmin: ->\n    (Session.get 'userID') != (Session.get 'admin-userID')\n  userLoggedIn: ->\n    (Session.get 'userID') != null\n\n  graphSelected: ->\n    (Session.get 'graphName') != null\n  scriptSelected: ->\n    (Session.get 'scriptName') != null\n  scriptResult: ->\n    #(Session.get 'scriptResult')\n    (Session.get 'showJSONResult')\n\n  graphToShow: ->\n    (Session.get 'graphFoundInResults')\n\n  drawingGraph: ->\n    #(Session.get 'drawButtonPressed')\n    (Session.get 'drawGraphResult')"
  ]
}